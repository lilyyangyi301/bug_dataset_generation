{"status": "success", "file": "0.java", "original": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformed": "public class DummyClass {\n\t@Override\n\tpublic void execute(String do) throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformation": "add_arguments", "context_diff": "--- 0.java\n+++ add_arguments_0.java\n@@ -1,6 +1,6 @@\n public class DummyClass {\n \t@Override\n-\tpublic void execute() throws BuildException {\n+\tpublic void execute(String do) throws BuildException {\n \t\tif (!StringUtils.hasText(this.refid)) {\n \t\t\tthrow new BuildException(\"@refid has no text\");\n \t\t}\n"}
{"status": "success", "file": "0.java", "original": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformed": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().add_upReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformation": "rename_api", "context_diff": "--- 0.java\n+++ rename_api_0.java\n@@ -4,6 +4,6 @@\n \t\tif (!StringUtils.hasText(this.refid)) {\n \t\t\tthrow new BuildException(\"@refid has no text\");\n \t\t}\n-\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n+\t\tgetProject().add_upReference(this.refid, getClass().getClassLoader());\n \t}\n }\n"}
{"status": "success", "file": "0.java", "original": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformed": "public class DummyClass {\n\t@Override\n\tpublic void fulfill() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformation": "rename_method_name", "context_diff": "--- 0.java\n+++ rename_method_name_0.java\n@@ -1,6 +1,6 @@\n public class DummyClass {\n \t@Override\n-\tpublic void execute() throws BuildException {\n+\tpublic void fulfill() throws BuildException {\n \t\tif (!StringUtils.hasText(this.refid)) {\n \t\t\tthrow new BuildException(\"@refid has no text\");\n \t\t}\n"}
{"status": "success", "file": "0.java", "original": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\t}\n}", "transformed": "public class DummyClass {\n\t@Override\n\tpublic void execute() throws BuildException {\n\t\tif (!StringUtils.hasText(this.refid)) {\n\t\t\tthrow new BuildException(\"@refid has no text\");\n\t\t}\n\t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n\tSystem.out.println(\"\t\");\n\n\t}\n}", "transformation": "add_print", "context_diff": "--- 0.java\n+++ add_print_0.java\n@@ -5,5 +5,7 @@\n \t\t\tthrow new BuildException(\"@refid has no text\");\n \t\t}\n \t\tgetProject().addReference(this.refid, getClass().getClassLoader());\n+\tSystem.out.println(\"\t\");\n+\n \t}\n }\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(draw[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "rename_argument", "context_diff": "--- 1.java\n+++ rename_argument_1.java\n@@ -1,5 +1,5 @@\n public class DummyClass {\n-\tprivate void run(String[] args) {\n+\tprivate void run(draw[] args) {\n \t\tRestarter.initialize(args, RestartInitializer.NONE);\n \t\tSpringApplication application = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] arg, train[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "add_arguments", "context_diff": "--- 1.java\n+++ add_arguments_1.java\n@@ -1,5 +1,5 @@\n public class DummyClass {\n-\tprivate void run(String[] args) {\n+\tprivate void run(String[] arg, train[] args) {\n \t\tRestarter.initialize(args, RestartInitializer.NONE);\n \t\tSpringApplication application = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setlistener(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "rename_api", "context_diff": "--- 1.java\n+++ rename_api_1.java\n@@ -6,7 +6,7 @@\n \t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n \t\tapplication.setBanner(getBanner());\n \t\tapplication.setInitializers(getInitializers());\n-\t\tapplication.setListeners(getListeners());\n+\t\tapplication.setlistener(getListeners());\n \t\tapplication.run(args);\n \t\twaitIndefinitely();\n \n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication coating = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tcoating.setWebApplicationType(WebApplicationType.NONE);\n\t\tcoating.setBanner(getBanner());\n\t\tcoating.setInitializers(getInitializers());\n\t\tcoating.setListeners(getListeners());\n\t\tcoating.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (coating == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "rename_local_variable", "context_diff": "--- 1.java\n+++ rename_local_variable_1.java\n@@ -1,16 +1,16 @@\n public class DummyClass {\n \tprivate void run(String[] args) {\n \t\tRestarter.initialize(args, RestartInitializer.NONE);\n-\t\tSpringApplication application = new SpringApplication(\n+\t\tSpringApplication coating = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n-\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n-\t\tapplication.setBanner(getBanner());\n-\t\tapplication.setInitializers(getInitializers());\n-\t\tapplication.setListeners(getListeners());\n-\t\tapplication.run(args);\n+\t\tcoating.setWebApplicationType(WebApplicationType.NONE);\n+\t\tcoating.setBanner(getBanner());\n+\t\tcoating.setInitializers(getInitializers());\n+\t\tcoating.setListeners(getListeners());\n+\t\tcoating.run(args);\n \t\twaitIndefinitely();\n \n-\t\tif (application == true) {\n+\t\tif (coating == true) {\n \t\t\tSystem.out.println(\"ddd\");\n \t\t} else {\n \t\t\tSystem.out.println(\"fff\");\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tdiligence.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "add_local_variable", "context_diff": "--- 1.java\n+++ add_local_variable_1.java\n@@ -4,6 +4,7 @@\n \t\tSpringApplication application = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n \t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n+\t\tdiligence.setWebApplicationType(WebApplicationType.NONE);\n \t\tapplication.setBanner(getBanner());\n \t\tapplication.setInitializers(getInitializers());\n \t\tapplication.setListeners(getListeners());\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void r(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.r(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "rename_method_name", "context_diff": "--- 1.java\n+++ rename_method_name_1.java\n@@ -1,5 +1,5 @@\n public class DummyClass {\n-\tprivate void run(String[] args) {\n+\tprivate void r(String[] args) {\n \t\tRestarter.initialize(args, RestartInitializer.NONE);\n \t\tSpringApplication application = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n@@ -7,7 +7,7 @@\n \t\tapplication.setBanner(getBanner());\n \t\tapplication.setInitializers(getInitializers());\n \t\tapplication.setListeners(getListeners());\n-\t\tapplication.run(args);\n+\t\tapplication.r(args);\n \t\twaitIndefinitely();\n \n \t\tif (application == true) {\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\tif (arg == null){\n\t\tSystem.out.println('please check your input');\n\t}\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "enhance_filed", "context_diff": "--- 1.java\n+++ enhance_filed_1.java\n@@ -1,6 +1,9 @@\n public class DummyClass {\n \tprivate void run(String[] args) {\n \t\tRestarter.initialize(args, RestartInitializer.NONE);\n+\tif (arg == null){\n+\t\tSystem.out.println('please check your input');\n+\t}\n \t\tSpringApplication application = new SpringApplication(\n \t\t\t\tRemoteClientConfiguration.class);\n \t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == (0==0)) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformation": "enhance_if", "context_diff": "--- 1.java\n+++ enhance_if_1.java\n@@ -10,7 +10,7 @@\n \t\tapplication.run(args);\n \t\twaitIndefinitely();\n \n-\t\tif (application == true) {\n+\t\tif (application == (0==0)) {\n \t\t\tSystem.out.println(\"ddd\");\n \t\t} else {\n \t\t\tSystem.out.println(\"fff\");\n"}
{"status": "success", "file": "1.java", "original": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\t\t}\n\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate void run(String[] args) {\n\t\tRestarter.initialize(args, RestartInitializer.NONE);\n\t\tSpringApplication application = new SpringApplication(\n\t\t\t\tRemoteClientConfiguration.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tapplication.setBanner(getBanner());\n\t\tapplication.setInitializers(getInitializers());\n\t\tapplication.setListeners(getListeners());\n\t\tapplication.run(args);\n\t\twaitIndefinitely();\n\n\t\tif (application == true) {\n\t\t\tSystem.out.println(\"ddd\");\n\t\t} else {\n\t\t\tSystem.out.println(\"fff\");\n\tSystem.out.println(\"\t\");\n\n\t\t}\n\n\t}\n}", "transformation": "add_print", "context_diff": "--- 1.java\n+++ add_print_1.java\n@@ -14,6 +14,8 @@\n \t\t\tSystem.out.println(\"ddd\");\n \t\t} else {\n \t\t\tSystem.out.println(\"fff\");\n+\tSystem.out.println(\"\t\");\n+\n \t\t}\n \n \t}\n"}
{"status": "success", "file": "2.java", "original": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\tif (initializers == null){\n\t\t\treturn 0;\n\t\t}\nreturn initializers;\n\t}\n}", "transformation": "return_optimal", "context_diff": "--- 2.java\n+++ return_optimal_2.java\n@@ -2,6 +2,9 @@\n \tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n \t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n \t\tinitializers.add(new RestartScopeInitializer());\n-\t\treturn initializers;\n+\t\tif (initializers == null){\n+\t\t\treturn 0;\n+\t\t}\n+return initializers;\n \t}\n }\n"}
{"status": "success", "file": "2.java", "original": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers(String getinitialisers) {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformation": "add_arguments", "context_diff": "--- 2.java\n+++ add_arguments_2.java\n@@ -1,5 +1,5 @@\n public class DummyClass {\n-\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n+\tprivate Collection<ApplicationContextInitializer<?>> getInitializers(String getinitialisers) {\n \t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n \t\tinitializers.add(new RestartScopeInitializer());\n \t\treturn initializers;\n"}
{"status": "success", "file": "2.java", "original": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.a(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformation": "rename_api", "context_diff": "--- 2.java\n+++ rename_api_2.java\n@@ -1,7 +1,7 @@\n public class DummyClass {\n \tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n \t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n-\t\tinitializers.add(new RestartScopeInitializer());\n+\t\tinitializers.a(new RestartScopeInitializer());\n \t\treturn initializers;\n \t}\n }\n"}
{"status": "success", "file": "2.java", "original": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializeR() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformation": "rename_method_name", "context_diff": "--- 2.java\n+++ rename_method_name_2.java\n@@ -1,5 +1,5 @@\n public class DummyClass {\n-\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n+\tprivate Collection<ApplicationContextInitializer<?>> getInitializeR() {\n \t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n \t\tinitializers.add(new RestartScopeInitializer());\n \t\treturn initializers;\n"}
{"status": "success", "file": "2.java", "original": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\t}\n}", "transformed": "public class DummyClass {\n\tprivate Collection<ApplicationContextInitializer<?>> getInitializers() {\n\t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n\t\tinitializers.add(new RestartScopeInitializer());\n\t\treturn initializers;\n\tSystem.out.println(\"\t\");\n\n\t}\n}", "transformation": "add_print", "context_diff": "--- 2.java\n+++ add_print_2.java\n@@ -3,5 +3,7 @@\n \t\tList<ApplicationContextInitializer<?>> initializers = new ArrayList<>();\n \t\tinitializers.add(new RestartScopeInitializer());\n \t\treturn initializers;\n+\tSystem.out.println(\"\t\");\n+\n \t}\n }\n"}
